/**
 * convert pixel to rem
 * https://github.com/CaptainOfPhB/scss-px2rem
 */
@use "sass:math";

$baseFontSize: 16 !default;

@function parseInt($n) {
  @return math.div($n, ($n * 0 + 1));
}

@mixin rem($property, $values, $root: $baseFontSize) {
  $px: ();
  $rem: ();

  @each $value in $values {
    @if $value == 0 or $value == auto {
      $px: append($px, $value);
      $rem: append($rem, $value);
    } @else if type-of($value) == number {
      $unit: unit($value);
      $val: parseInt($value);

      @if $unit == "px" {
        $px: append($px, $value);
        $rem: append($rem, (math.div($val, $root) + rem));
      }

      @if $unit == "rem" {
        $px: append($px, ($val * $root + px));
        $rem: append($rem, $value);
      }
    } @else {
      $px: append($px, $value);
      $rem: append($rem, $value);
    }
  }

  @if $px == $rem {
    #{$property}: $px;
  } @else {
    #{$property}: $px;
    #{$property}: $rem;
  }
}

@function rem($value, $root: $baseFontSize) {
  $val: parseInt($value);
  $return: ();

  @if unit($value) == "px" {
    $return: append($return, (math.div($val, $root) + rem));
  } @else {
    // $return: append($return, ($val * $root + px));
    $return: append($return, ($val + rem));
  }

  @return $return;
}
